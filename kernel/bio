// -*- C++ -*-

#pragma once
#include <cstdint>

#include "kernel/fs"
#include "lock"

namespace bio {
struct buf {
  int valid;  // has data been read from disk?
  int disk;   // does disk "own" buf?
  uint32_t dev;
  uint32_t blockno;
  struct lock::sleeplock lock;
  uint32_t refcnt;
  struct buf *prev;  // LRU cache list
  struct buf *next;
  unsigned char data[fs::BSIZE];
};

auto init() -> void;
auto bread(uint32_t dev, uint32_t blockno) -> struct buf *;
auto bget(uint32_t dev, uint32_t blockno) -> struct buf *;
auto brelse(struct buf &b) -> void;
auto bwrite(struct bio::buf *buf) -> void;
auto bpin(struct buf *buf) -> void;
auto bupin(struct bio::buf *buf) -> void;
}  // namespace bio
